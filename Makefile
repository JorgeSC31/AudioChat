# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  unp_config = debug
  epoll_api_config = debug
  broadcast_config = debug
  audio_api_config = debug
  config_config = debug
  Client_config = debug
  Server_config = debug

else ifeq ($(config),release)
  unp_config = release
  epoll_api_config = release
  broadcast_config = release
  audio_api_config = release
  config_config = release
  Client_config = release
  Server_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := unp epoll-api broadcast audio-api config Client Server

.PHONY: all clean help $(PROJECTS) Core Dependencies

all: $(PROJECTS)

Core: Client Server

Dependencies: audio-api broadcast config epoll-api unp

unp:
ifneq (,$(unp_config))
	@echo "==== Building unp ($(unp_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/unp -f Makefile config=$(unp_config)
endif

epoll-api:
ifneq (,$(epoll_api_config))
	@echo "==== Building epoll-api ($(epoll_api_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/epoll-api -f Makefile config=$(epoll_api_config)
endif

broadcast:
ifneq (,$(broadcast_config))
	@echo "==== Building broadcast ($(broadcast_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/broadcast -f Makefile config=$(broadcast_config)
endif

audio-api: unp config
ifneq (,$(audio_api_config))
	@echo "==== Building audio-api ($(audio_api_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/audio-api -f Makefile config=$(audio_api_config)
endif

config:
ifneq (,$(config_config))
	@echo "==== Building config ($(config_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/config -f Makefile config=$(config_config)
endif

Client: unp epoll-api audio-api config
ifneq (,$(Client_config))
	@echo "==== Building Client ($(Client_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Client -f Makefile config=$(Client_config)
endif

Server: unp broadcast config
ifneq (,$(Server_config))
	@echo "==== Building Server ($(Server_config)) ===="
	@${MAKE} --no-print-directory -C AudioChat/Server -f Makefile config=$(Server_config)
endif

clean:
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/unp -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/epoll-api -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/broadcast -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/audio-api -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Dependencies/config -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Client -f Makefile clean
	@${MAKE} --no-print-directory -C AudioChat/Server -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   unp"
	@echo "   epoll-api"
	@echo "   broadcast"
	@echo "   audio-api"
	@echo "   config"
	@echo "   Client"
	@echo "   Server"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"